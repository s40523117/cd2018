
# A configuration file to make stubs for Leo's core files

[Global]

files: leo/commands/*.py
output_directory: ~/stubs/leo-commands
prefix_lines:
    from typing import Any, Dict, Optional, Sequence, Tuple, Union

[Def Name Patterns]

AstFormatter.do_*: str
StubFormatter.do_*: str
StubTraverser.do_*: str

# Regex patterns.
.*__hash__$: int
.*endswith\(.*\)$: bool

    # Pattern.all_matches: Sequence
    # Pattern.full_balanced_match: Optional[int]
    # Pattern.match_balanced: int
    # Pattern.match_entire_string: bool
    # StandAloneMakeStubFile.scan_types: Dict[str, str]
    # StubTraverser.format_returns: str
    # StubTraverser.match_return_patterns: Tuple[bool,str]
    # StubTraverser.match_return_pattern: Optional[str]
    # StubTraverser.match_balanced: int

[General Patterns]

# Declarations of names...
NotImplemented: bool
a: str
aList: List[Any]
comments: str
controller: StandAloneMakeStubFile
find_s: str
fn: str
found: str
general_patterns: List[Pattern]
group: str
i1: int
i2: int
i: int
j1: int
j2: int
j: int
n1: int
n2: int
n: int
name: str
ndots: int
node: Node
parser: optparse.OptionParser
patterns: List
repl_s: str
s: str
s1: str
s2: str
# strict: bool
trace: bool

# Known functions...
all(*): bool
any(*): bool
bool(*): bool
endswith(*): bool
g.match_word(*): bool
hash(*): int
hasattr(*): bool
int(*): int
len(*): int
list(*): List[*]
os.path.basename(*): str
os.sep.join(*): str
repr(*): str
sep.join(*): str
self.__eq__(*): bool
self.__ne__(*): bool
self.__gt__(*): bool
self.__lt__(*): bool
sorted(*): str
str%(*): str
str.endswith(*): str
str.join(*): str
str.isspace(*): str
str.startswith(*): str
str[*]: str
sum(*): number
