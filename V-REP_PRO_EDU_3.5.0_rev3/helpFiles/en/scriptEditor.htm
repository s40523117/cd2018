<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Script editor</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Script editor</h1>


<p>The script editor allows editing the various scripts in V-REP. It is opened by double-clicking a script in the <a href="scriptProperties.htm">script dialog</a>, or by double-clicking a script icon in the <a href="userInterface.htm#SceneHierarchy">scene hierarchy</a>.<br>
</p>

<p align=center><img src="images/scriptEditor1.jpg"></p>
<p class=imageLabel>[Script editor]</p>
<br>

<p>The script editor has following features that make the code edition easier:</p>
<li>auto-completion</li>
<li>call tips</li>
<li>syntax highlighting</li>
<li>Highlighting of all occurrences of selected word</li>
<li>source folding/unfolding</li>
<li>simple word search via the &lt;ctrl+f&gt; key</li>
<li>no need for explicit saving</li>

<p>The API functions can easily be accessed by typing the first 3 letters (usually &quot;sim&quot;). Copy/paste and undo/redo functionality of the script editor is supported through a popup menu (right-click). When a script was modified, there is no need to explicitly save the changes: closing the script editor, saving the scene or starting a <a href="simulation.htm">simulation</a> will automatically apply the changes to the script. When a simulation is running, modifications to a given script will only have an effect once a new simulation run is started, except for <a href="customizationScripts.htm">customization scripts</a> that will always apply changes once the editor was closed. </p>

<p>If you have recurring functions you wish to access from a given script, you can add following line at the top of your script:</p>

<pre class=lightRedBox>
require "myExternalLuaFile"
</pre>

<p>In that case, make sure the file is named <em>myExternalLuaFile.lua</em>, and do not forget to distribute it together with your scene or model, since that code will not be part of a V-REP file anymore.</p>

<p>It can also be convenient to include the code from an external lua script, for ease of maintenance, or simply if you wish to use the same script content for several scripts:</p>

<pre class=lightRedBox>
sim.include('/lua/myExternalLuaScript.lua')
</pre>


<p>Above way of including scripts will also allow you to edit your script content with an external editor. Remember however that you will also have to distribute the external files, when distributing your scene or model.</p>
<br>
<br>

<h3 class=recommendedTopics>Recommended topics</h3>
<li><a href="scriptProperties.htm">Script properties</a></li>
<br>
<br>
 </tr>
</table> 
</div>  
  
  
</body>

</html>
